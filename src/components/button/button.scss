@import '../style/variables';
@import '../style/mixins';
@import '../ripple/ripple';

// Raised Placeholder
%btn-raised {
  transition: box-shadow .4s cubic-bezier(0.25, 0.8, 0.25, 1);
  transform: translate3d(0, 0, 0);

  @include elevation(2);

  &:active {
    @include elevation(8);
  }

  &:hover {
    background-color: transparent;
  }

  &[disabled] {
    background-color: $gray-lighter;
    box-shadow: none;
  }
}

// Icon Placeholder
%btn-icon {
  min-width: 0;
  padding: 0;

  border-radius: 50%;

  &:hover {
    background-color: transparent;
  }

  &[disabled] i {
    color: $gray-lighter;
  }

  i, .icon {
    line-height: inherit;
  }
}

.ui-button {
  position: relative;

  display: inline-block;
  overflow: hidden;

  min-width: $btn-min-width;
  height: $btn-height;
  padding: $btn-padding;

  cursor: pointer;
  transition: box-shadow .2s ease-out, background-color .2s, color .2s;
  text-align: center;
  vertical-align: bottom;
  white-space: nowrap;
  text-decoration: none;

  color: $dark;
  border: none;
  border-radius: $btn-radius;
  outline: none;
  background-color: transparent;

  font-family: inherit;
  font-size: $btn-font-size;
  line-height: $btn-height;

  will-change: box-shadow, background-color;
  
  &:hover {
    background-color: $btn-hover-bg;
  } 
  
  // DISABLED
  &[disabled] {
    color: $gray-light;
    box-shadow: none;
    &:hover {
      cursor: default;

      background-color: transparent;
    }
  }
  
  // RAISED
  &.btn-raised {
    @extend %btn-raised;
  }
  
  // ICON
  &.btn-icon {
    line-height: $btn-icon-size;

    @extend %btn-icon;
    @include square($btn-icon-size);
  }
  
  // FAB
  &.btn-fab {
    line-height: $btn-fab-size;

    @extend %btn-raised;
    @extend %btn-icon;
    @include square($btn-fab-size);
    
    // FAB-MINI
    &[mini] {
      line-height: $btn-fab-mini-size;

      @include square($btn-fab-mini-size);
    }
  }

  // OUTLINE
  &.btn-outline {
    border: 1px solid $gray-lighter;
    background: transparent;

    &:hover {
      background-color: $btn-hover-bg;
    }

    &[disabled] {
      background-color: $gray-lighter;
      border-color: transparent;
    }
  }

  // COLOR
  @each $color-name in map-keys($color-map) {
    &.#{$color-name} {
      color: map-get($color-map, $color-name);
      &[disabled] {
        color: $btn-disabled-color;
      }
    }

    &.btn-raised.#{$color-name},
    &.btn-fab.#{$color-name} {
      color: $white;
      background-color: map-get($color-map, $color-name);

      &:hover {
        background-color: darken(map-get($color-map, $color-name), 5%);
      }

      &[disabled] {
        color: $btn-disabled-color;
        background-color: $gray-lighter;
      }
    }

    &.btn-icon[disabled] i,
    &.btn-fab[disabled] i {
      color: $btn-disabled-color;
    }

    &.btn-outline.#{$color-name} {
      border-color: map-get($color-map, $color-name);

      &:hover {
        background-color: map-get($color-map, $color-name);
        color: $white;
      }
    }
  }
}
